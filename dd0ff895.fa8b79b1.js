(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{85:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return u})),a.d(t,"default",(function(){return s}));var n=a(3),r=a(7),l=(a(0),a(90)),o={id:"features",title:"Features"},i={unversionedId:"documentation/features",id:"documentation/features",isDocsHomePage:!1,title:"Features",description:"Fill-in a single template with a value object",source:"@site/docs/documentation/features.md",slug:"/documentation/features",permalink:"/template-utils/docs/documentation/features",editUrl:"https://github.com/videki/template-utils/docs/documentation/features.md",version:"current",sidebar:"docs",previous:{title:"Built-in components",permalink:"/template-utils/docs/documentation/components"},next:{title:"Examples",permalink:"/template-utils/docs/samples/samples"}},u=[{value:"Fill-in a single template with a value object",id:"fill-in-a-single-template-with-a-value-object",children:[]},{value:"Fill a template resulting a given format",id:"fill-a-template-resulting-a-given-format",children:[]},{value:"Process a document structure",id:"process-a-document-structure",children:[]},{value:"Process a document structure by its friendly name",id:"process-a-document-structure-by-its-friendly-name",children:[]},{value:"Fill and store a template",id:"fill-and-store-a-template",children:[]},{value:"Fill and store a template in a given format",id:"fill-and-store-a-template-in-a-given-format",children:[]},{value:"Fill and store a document structure",id:"fill-and-store-a-document-structure",children:[]},{value:"Fill and save a document structure by its friendly name",id:"fill-and-save-a-document-structure-by-its-friendly-name",children:[]}],c={toc:u};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"fill-in-a-single-template-with-a-value-object"},"Fill-in a single template with a value object"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"/** <p>Fills the given single file template specified by its name and return the filled document\n* in the templates format.</p>\n* <p>The template file format has to be in the configured template provider - @see TemplateServiceConfiguration</p>\n* @param templateName the template file name\n* @param dto the value object to fill the template\n* @param <T> the value object type\n* @throws TemplateServiceException if invalid parameters caught\n* @throws TemplateProcessException thrown if the configuration/call params are invalid\n* @return ResultDocument a copy of the input template filled with the dto's data on success\n*\n* */\n  <T> ResultDocument fill(final String templateName, final T dto) throws TemplateServiceException;\n")),Object(l.b)("h2",{id:"fill-a-template-resulting-a-given-format"},"Fill a template resulting a given format"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"/** Fills the given single file template specified by its name and converts if needed to the given output format.\n* @param templateName The template file name\n* @param dto the value object to fill the template\n* @param format the output format - @see OutputFormat\n* @param <T> the value object type\n* @throws TemplateServiceException if invalid parameters caught\n* @throws TemplateProcessException thrown if the configuration/call params are invalid\n* @return ResultDocument a copy of the input template filled with the dto's data on success\n*\n* */\n  <T> ResultDocument fill(final String templateName, final T dto, final OutputFormat format)\n  throws TemplateServiceException;\n")),Object(l.b)("h2",{id:"process-a-document-structure"},"Process a document structure"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"/** Process a multipart template (consisting of one or more template files) and return one or more result documents.\n* @param documentStructure the document structure to be filled with the specified values.\n* @param values the value objects for the document parts. The values are organized into contexts where\n*               each document part may have its own value objects and a global one - see the template contexts\n*               in @see ValueSet.\n* @throws TemplateServiceException if invalid parameters caught\n* @return GenerationResult the result documents generated based on the input documentstructure and value set\n* */\n  GenerationResult fill(final DocumentStructure documentStructure, final ValueSet values)\n  throws TemplateServiceException;\n")),Object(l.b)("h2",{id:"process-a-document-structure-by-its-friendly-name"},"Process a document structure by its friendly name"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"/** Process a multipart template (consisting of one or more template files) and return one or more result documents.\n* @param documentStructureFile the document structure file name to be filled with the specified values.\n* @param values the value objects for the document parts. The values are organized into contexts where\n*               each document part may have its own value objects and a global one - see the template contexts\n*               in @see ValueSet.\n* @throws TemplateServiceException if invalid parameters caught\n* @return GenerationResult the result documents generated based on the input documentstructure and value set\n* */\n  GenerationResult fillDocumentStructureByName(final String documentStructureFile, final ValueSet values)\n  throws TemplateServiceException;\n")),Object(l.b)("h2",{id:"fill-and-store-a-template"},"Fill and store a template"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"/** <p>Fills the given single file template specified by its name and return the filled document\n* in the templates format.</p>\n* <p>The template file format has to be in the configured template provider - @see TemplateServiceConfiguration</p>\n* @param templateName the template file name\n* @param dto the value object to fill the template\n* @param <T> the value object type\n* @throws TemplateServiceException if invalid parameters caught\n* @throws TemplateProcessException thrown if the configuration/call params are invalid\n* @return StoredResultDocument the result filename and its save success flag\n*\n* */\n  <T> StoredResultDocument fillAndSave(final String templateName, final T dto) throws TemplateServiceException;\n")),Object(l.b)("h2",{id:"fill-and-store-a-template-in-a-given-format"},"Fill and store a template in a given format"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"/** Fills the given single file template specified by its name and converts if needed to the given output format.\n* @param templateName The template file name\n* @param dto the value object to fill the template\n* @param format the output format - @see OutputFormat\n* @param <T> the value object type\n* @throws TemplateServiceException if invalid parameters caught\n* @throws TemplateProcessException thrown if the configuration/call params are invalid\n* @return StoredResultDocument the result filename and its save success flag\n*\n* */\n  <T> StoredResultDocument fillAndSave(final String templateName, final T dto, final OutputFormat format)\n  throws TemplateServiceException;\n")),Object(l.b)("h2",{id:"fill-and-store-a-document-structure"},"Fill and store a document structure"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"/** Process a multipart template (consisting of one or more template files) and return one or more result documents.\n* @param documentStructure the document structure to be filled with the specified values.\n* @param values the value objects for the document parts. The values are organized into contexts where\n*               each document part may have its own value objects and a global one - see the template contexts\n*               in @see ValueSet.\n* @throws TemplateServiceException if invalid parameters caught\n* @return StoredGenerationResult the result documents file names generated based on the input documentstructure and\n*         value set\n* */\n  StoredGenerationResult fillAndSave(final DocumentStructure documentStructure, final ValueSet values)\n  throws TemplateServiceException;\n")),Object(l.b)("h2",{id:"fill-and-save-a-document-structure-by-its-friendly-name"},"Fill and save a document structure by its friendly name"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"/** Process a multipart template (consisting of one or more template files) and return one or more result documents.\n* @param documentStructureFile the document structure file name to be filled with the specified values.\n* @param values the value objects for the document parts. The values are organized into contexts where\n*               each document part may have its own value objects and a global one - see the template contexts\n*               in @see ValueSet.\n* @throws TemplateServiceException if invalid parameters caught\n* @return GenerationResult the result documents generated based on the input documentstructure and value set\n* */\n  StoredGenerationResult fillAndSaveDocumentStructureByName(final String documentStructureFile, final ValueSet values)\n  throws TemplateServiceException;\n")))}s.isMDXComponent=!0},90:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return f}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function u(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=s(a),d=n,f=m["".concat(o,".").concat(d)]||m[d]||p[d]||l;return a?r.a.createElement(f,i(i({ref:t},c),{},{components:a})):r.a.createElement(f,i({ref:t},c))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);