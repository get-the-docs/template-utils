(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{80:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return p}));var n=r(3),o=r(7),a=(r(0),r(90)),c={id:"components",title:"Built-in components"},s={unversionedId:"documentation/components",id:"documentation/components",isDocsHomePage:!1,title:"Built-in components",description:"This section describes how to use, configure and extend the generator components.",source:"@site/docs/documentation/components.md",slug:"/documentation/components",permalink:"/template-utils/docs/documentation/components",editUrl:"https://github.com/videki/template-utils/docs/documentation/components.md",version:"current",sidebar:"docs",previous:{title:"Architecture",permalink:"/template-utils/docs/documentation/architecture"},next:{title:"Features",permalink:"/template-utils/docs/documentation/features"}},l=[{value:"Template repositories",id:"template-repositories",children:[{value:"Filesystem repository",id:"filesystem-repository",children:[]}]},{value:"Document structure repositories",id:"document-structure-repositories",children:[{value:"Filesystem doc structure repository",id:"filesystem-doc-structure-repository",children:[]}]},{value:"Document structure builders",id:"document-structure-builders",children:[{value:"YAML document structure builder",id:"yaml-document-structure-builder",children:[]}]},{value:"Input processors",id:"input-processors",children:[{value:"Docx-stamper processor",id:"docx-stamper-processor",children:[]},{value:"Noop processor",id:"noop-processor",children:[]},{value:"Jxls processor",id:"jxls-processor",children:[]}]},{value:"Converters",id:"converters",children:[{value:"Pdfbox docx-pdf converter",id:"pdfbox-docx-pdf-converter",children:[]}]},{value:"Result stores",id:"result-stores",children:[]},{value:"Registries",id:"registries",children:[]},{value:"Input and output types",id:"input-and-output-types",children:[{value:"Document structures",id:"document-structures",children:[]},{value:"Value sets",id:"value-sets",children:[]},{value:"Generation results",id:"generation-results",children:[]}]}],i={toc:l};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},i,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This section describes how to use, configure and extend the generator components."),Object(a.b)("h2",{id:"template-repositories"},"Template repositories"),Object(a.b)("p",null,"Template repositories maintain how the required templates are accessed."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Configuration")),Object(a.b)("p",null,"To bind a repository connector, the provider class and its provider-specific properties have to be specified.\nYou can find the latter at the provider description."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-properties"},"# Use filesystem folder as a template repository   \nrepository.template.provider=org.mycompany.templaterepo.ProviderClass\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Repository connectors")),Object(a.b)("h3",{id:"filesystem-repository"},"Filesystem repository"),Object(a.b)("p",null,"Retrieves templates from a filesystem location, e.g. each template is stored as a file.  "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-properties"},"repository.template.provider=net.videki.templateutils.template.core.provider.templaterepository.filesystem.FileSystemTemplateRepository\nrepository.template.provider.basedir=templates\n")),Object(a.b)("p",null,"Configuration:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Property"),Object(a.b)("th",{parentName:"tr",align:null},"Value"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"repository.template.provider.basedir"),Object(a.b)("td",{parentName:"tr",align:null},"Root folder location. Can be an absolute, or a relative path to app startup location.")))),Object(a.b)("h2",{id:"document-structure-repositories"},"Document structure repositories"),Object(a.b)("p",null,"Document structure repositories maintain how the document set descriptors are accessed.\nFor handling document structures two providers are required:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"a repository for retrieving the structure descriptors (filesystem, git, postgres, mongodb, etc.)"),Object(a.b)("li",{parentName:"ul"},"a builder for parsing the descriptors  (yaml, etc.)")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Configuration")),Object(a.b)("p",null,"To bind a repository connector, the provider class and its provider-specific properties have to be specified.\nYou can find the latter at the provider description."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-properties"},"# Use filesystem folder as a template repository   \nrepository.documentstructure.provider=org.mycompany.docstructurerepo.ProviderClass\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Repository connectors")),Object(a.b)("h3",{id:"filesystem-doc-structure-repository"},"Filesystem doc structure repository"),Object(a.b)("p",null,"Retrieves templates from a filesystem location, e.g. each template is stored as a file."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-properties"},"repository.documentstructure.provider=net.videki.templateutils.template.core.provider.documentstructure.repository.filesystem.FileSystemDocumentStructureRepository\nrepository.documentstructure.provider.filesystem.basedir=doc-structures\n")),Object(a.b)("p",null,"Configuration:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Property"),Object(a.b)("th",{parentName:"tr",align:null},"Value"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"repository.documentstructure.provider.filesystem.basedir"),Object(a.b)("td",{parentName:"tr",align:null},"Root folder location. Can be an absolute, or a relative path to app startup location.")))),Object(a.b)("h2",{id:"document-structure-builders"},"Document structure builders"),Object(a.b)("p",null,"Document structure builder control how the document set descriptors are built."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Configuration")),Object(a.b)("p",null,"To bind a document set builder connector, the provider class and its provider-specific properties have to be specified.\nYou can find the latter at the provider description."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-properties"},"# Use filesystem folder as a template repository   \nrepository.documentstructure.provider=org.mycompany.structurebuilder.MyProviderClass\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Builder implementations")),Object(a.b)("h3",{id:"yaml-document-structure-builder"},"YAML document structure builder"),Object(a.b)("p",null,"Parses a document structure stored in YAML format.\n(The source repository )"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-properties"},"repository.documentstructure.builder=net.videki.templateutils.template.core.provider.documentstructure.builder.yaml.YmlDocStructureBuilder\n")),Object(a.b)("h2",{id:"input-processors"},"Input processors"),Object(a.b)("p",null,"An input processor is a template processor, which fills in a specific template format\nusing a given placeholder and control (for example .docx files with docx-stamper markup)."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-properties"},"processors.provider.<input-format>=org.mycompany.docstructurerepo.ProviderClass\n")),Object(a.b)("p",null,"You can specify a list of input processors for the engine with ",Object(a.b)("strong",{parentName:"p"},"exactly one")," processor per input format.\nThe built-in configuration for example is the setup below:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-properties"},"processors.docx=net.videki.templateutils.template.core.processor.input.docx.DocxStamperInputTemplateProcessor\nprocessors.xlsx=net.videki.templateutils.template.core.processor.input.xlsx.JxlsInputTemplateProcessor\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Template contexts")),Object(a.b)("p",null,"The engine supports multiple values to be handed over to the processors. These are called template contexts.\nA context can either be "),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"global\nWhen only one value object is used, you can simply pass it to the engine without building a context wrapper.\nWhen using this, it will be handled as a global context, and you will have to refer the values of this object\nwith ",Object(a.b)("code",null,"model")," like ",Object(a.b)("inlineCode",{parentName:"li"},"${model.myValue}"))),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-java"},"        context.addValueObject(orgUnit);\n")),Object(a.b)("p",null,"  In this case this ",Object(a.b)("code",null,"orgUnit")," object can be referred as ",Object(a.b)("code",null,"model"),", and its fields\nwith ",Object(a.b)("code",null,"model.fieldname"),"."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"named\nIn case of multiple objects, you can put the DTOs into named contexts and refer them by their name:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-java"},'        final Contract dto = ContractDataFactory.createContract();\n        final OrganizationUnit orgUnit = OrgUnitDataFactory.createOrgUnit();\n\n        final Officer officer = OfficerDataFactory.createOfficer();\n        final DocumentProperties documentProperties = DocDataFactory.createDocData(transactionId);\n\n        final TemplateContext context = new TemplateContext();\n        context.getCtx().put("org", orgUnit);\n        context.getCtx().put("officer", officer);\n        context.getCtx().put("contract", dto);\n        context.getCtx().put("doc", documentProperties);\n')),Object(a.b)("p",null,"  This way you can refer the values by their context names like ",Object(a.b)("code",null,"ctx","['contract']",".field"),"\ne.q. ",Object(a.b)("inlineCode",{parentName:"p"},"${ctx['contextname'].myValue}"),"."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Implementations")),Object(a.b)("h3",{id:"docx-stamper-processor"},"Docx-stamper processor"),Object(a.b)("h4",{id:"input-format-docx"},"Input format: .docx"),Object(a.b)("p",null,"Processes .docx templates using comment markup implemented by the\n",Object(a.b)("a",{parentName:"p",href:"https://github.com/thombergs/docx-stamper"},"docx stamper")," tool."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-properties"},"processors.provider.docx=net.videki.templateutils.template.core.processor.input.docx.DocxStamperInputTemplateProcessor\n")),Object(a.b)("h3",{id:"noop-processor"},"Noop processor"),Object(a.b)("h4",{id:"input-format--"},"Input format: -"),Object(a.b)("p",null,"Simple loopback processor for returning input templates untouched."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-properties"},"processors.provider.noop=net.videki.templateutils.template.core.processor.input.noop.NoopTemplateProcessor\n")),Object(a.b)("h3",{id:"jxls-processor"},"Jxls processor"),Object(a.b)("h4",{id:"input-format-xlsx"},"Input format: .xlsx"),Object(a.b)("p",null,".xlsx processor for processing ",Object(a.b)("a",{parentName:"p",href:"http://jxls.sourceforge.net/"},"Jxls")," marked-up templates."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-properties"},"processors.provider.xlsx=net.videki.templateutils.template.core.processor.input.xlsx.JxlsInputTemplateProcessor\n")),Object(a.b)("h2",{id:"converters"},"Converters"),Object(a.b)("p",null,"Converters - as you may guess from the name - are format converters from an input format into an output format."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Implementations")),Object(a.b)("h3",{id:"pdfbox-docx-pdf-converter"},"Pdfbox docx-pdf converter"),Object(a.b)("p",null,"Converts docx documents into pdf using ",Object(a.b)("a",{parentName:"p",href:"https://pdfbox.apache.org/"},"PDF box"),"."),Object(a.b)("h2",{id:"result-stores"},"Result stores"),Object(a.b)("h2",{id:"registries"},"Registries"),Object(a.b)("h2",{id:"input-and-output-types"},"Input and output types"),Object(a.b)("h3",{id:"document-structures"},"Document structures"),Object(a.b)("p",null,"Document structures are a set of templates, or template alternatives (we call these ",Object(a.b)("code",null,"TemplateElement"),")\nwith a unique id describing the content that has to be generated."),Object(a.b)("p",null,"It basically describes:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"the list of template elements"),Object(a.b)("li",{parentName:"ul"},"how the result should look like: a singe, merged document is needed, or separate ones."),Object(a.b)("li",{parentName:"ul"},"the number of copies of the whole result"),Object(a.b)("li",{parentName:"ul"},"the output format into which the result has to converted (one of the output formats or unchanged)")),Object(a.b)("h4",{id:"template-elements"},"Template elements"),Object(a.b)("p",null,"A template element is a single template to be processed during generation identified by a given name\nlike ",Object(a.b)("code",null,'"contract"'),", etc. with locale-based alternatives and a default locale."),Object(a.b)("p",null,"For example:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},'# contract_v02.yml\n---\ndocumentStructureId: "109a562d-8290-407d-98e1-e5e31c9808b7"\nelements:\n  - templateElementId:\n      id: "cover"\n    templateNames:\n      hu_HU: "/covers/cover_v03.docx"\n    defaultLocale: "hu_HU"\n    count: 1\n  - templateElementId:\n      id: "contract"\n    templateNames:\n      en: "/contracts/vintage/contract_v09_en.docx"\n      hu: "/contracts/vintage/contract_v09_hu.docx"\n    defaultLocale: "hu_HU"\n    count: 1\n  - templateElementId:\n      id: "terms"\n    templateNames:\n      hu: "/term/terms_v02.docx"\n    defaultLocale: "hu_HU"\n    count: 1\n  - templateElementId:\n      id: "conditions"\n    templateNames:\n      hu: "/conditions/vintage/conditions_eco_v11.xlsx"\n    defaultLocale: "hu_HU"\n    count: 1\nresultMode: "SEPARATE_DOCUMENTS"\noutputFormat: "UNCHANGED"\ncopies: 1\n\n')),Object(a.b)("h3",{id:"value-sets"},"Value sets"),Object(a.b)("p",null,"A ",Object(a.b)("code",null,"ValueSet")," is a one-time holder object, in which we collect data for a specific document structure."),Object(a.b)("p",null,"The container can hold"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"global value contexts\nThese are used for all templates not having a specific context. Use this by adding the context\nwith ",Object(a.b)("code",null,"TemplateElementId.getGlobalTemplateElementId()")),Object(a.b)("li",{parentName:"ul"},"template-level contexts\nIf a template has to marked with a different object collection, than others, a template-level context can be added\nto the value set with the required template's ",Object(a.b)("code",null,"templateElementId"),".")),Object(a.b)("p",null,"You can instantiate a value set as shown below:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-java"},"    final ValueSet values = new ValueSet(structure.getDocumentStructureId(), tranId);\n    values.getValues().put(TemplateElementId.getGlobalTemplateElementId(), getContractTestData(tranId));\n")),Object(a.b)("p",null,"The transaction can be bound to the surrounding business transaction."),Object(a.b)("h3",{id:"generation-results"},"Generation results"),Object(a.b)("p",null,"A generation result is another holder object containing the result document stream (when using streams\nwithout saving the result into the result store), or descriptors of the saved results. "))}p.isMDXComponent=!0},90:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return m}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=o.a.createContext({}),p=function(e){var t=o.a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return o.a.createElement(i.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,m=u["".concat(c,".").concat(d)]||u[d]||b[d]||a;return r?o.a.createElement(m,s(s({ref:t},i),{},{components:r})):o.a.createElement(m,s({ref:t},i))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,c=new Array(a);c[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,c[1]=s;for(var i=2;i<a;i++)c[i]=r[i];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);